Running test 'Interpreter test 1'
PARSE: parseProgram
.    PARSE: parseDefinition
.    .    PARSE: parseBody
.    .    .    PARSE: parseChoice
.    .    .    .    PARSE: parseExpression
.    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    .    PARSE: parseExpression
.    .    .    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    .    .    FAIL: parseProperty; ERR: Expected string '=', got '
'.
.    .    .    .    .    .    .    PARSE: parseReference
.    .    .    .    .    .    .    SUCC: (35, {"kind": "Reference", "id": "sentence"})
.    .    .    .    .    .    SUCC: (35, {"kind": "Reference", "id": "sentence"})
.    .    .    .    .    SUCC: (35, {"kind": "Property", "inner": "{\"kind\": \"Reference\", \"id\": \"sentence\"}", "name": "sentence"})
.    .    .    .    SUCC: (35, {"kind": "Property", "inner": "{\"kind\": \"Reference\", \"id\": \"sentence\"}", "name": "sentence"})
.    .    .    FAIL: parseChoice; ERR: Expected at least one pipe.
.    .    .    PARSE: parseSequence
.    .    .    .    PARSE: parseExpression
.    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    .    PARSE: parseExpression
.    .    .    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    .    .    FAIL: parseProperty; ERR: Expected string '=', got '
'.
.    .    .    .    .    .    .    PARSE: parseReference
.    .    .    .    .    .    .    SUCC: (35, {"kind": "Reference", "id": "sentence"})
.    .    .    .    .    .    SUCC: (35, {"kind": "Reference", "id": "sentence"})
.    .    .    .    .    SUCC: (35, {"kind": "Property", "inner": "{\"kind\": \"Reference\", \"id\": \"sentence\"}", "name": "sentence"})
.    .    .    .    SUCC: (35, {"kind": "Property", "inner": "{\"kind\": \"Reference\", \"id\": \"sentence\"}", "name": "sentence"})
.    .    .    .    PARSE: parseExpression
.    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    FAIL: parseProperty; ERR: Invalid identifier character '
'.
.    .    .    .    .    PARSE: parseReference
.    .    .    .    .    FAIL: parseReference; ERR: Invalid identifier character '
'.
.    .    .    .    .    PARSE: parseExtension
.    .    .    .    .    FAIL: parseExtension; ERR: Expected string '&', got '
'.
.    .    .    .    .    PARSE: parseAdjoinment
.    .    .    .    .    FAIL: parseAdjoinment; ERR: Expected string '$', got '
'.
.    .    .    .    .    PARSE: parseLiteral
.    .    .    .    .    FAIL: parseLiteral; ERR: Expected string '"', got '
'.
.    .    .    .    .    PARSE: parseSet
.    .    .    .    .    FAIL: parseSet; ERR: Expected string '<', got '
'.
.    .    .    .    .    PARSE: parseOptional
.    .    .    .    .    FAIL: parseOptional; ERR: Expected string '?', got '
'.
.    .    .    .    .    PARSE: parseOnePlus
.    .    .    .    .    FAIL: parseOnePlus; ERR: Expected string '+', got '
'.
.    .    .    .    .    PARSE: parseZeroPlus
.    .    .    .    .    FAIL: parseZeroPlus; ERR: Expected string '*', got '
'.
.    .    .    .    .    PARSE: parseGuard
.    .    .    .    .    FAIL: parseGuard; ERR: Expected string '!', got '
'.
.    .    .    .    .    PARSE: parseBrackets
.    .    .    .    .    FAIL: parseBrackets; ERR: Expected string '[', got '
'.
.    .    .    .    .    PARSE: parseLambda
.    .    .    .    .    FAIL: parseLambda; ERR: Expected string '{', got '
'.
.    .    .    .    FAIL: parseExpression; ERR: Matched no option.
.    .    .    FAIL: parseSequence; ERR: Expected at least two simple expressions.
.    .    .    PARSE: parseExpression
.    .    .    .    PARSE: parseProperty
.    .    .    .    .    PARSE: parseExpression
.    .    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    .    FAIL: parseProperty; ERR: Expected string '=', got '
'.
.    .    .    .    .    .    PARSE: parseReference
.    .    .    .    .    .    SUCC: (35, {"kind": "Reference", "id": "sentence"})
.    .    .    .    .    SUCC: (35, {"kind": "Reference", "id": "sentence"})
.    .    .    .    SUCC: (35, {"kind": "Property", "inner": "{\"kind\": \"Reference\", \"id\": \"sentence\"}", "name": "sentence"})
.    .    .    SUCC: (35, {"kind": "Property", "inner": "{\"kind\": \"Reference\", \"id\": \"sentence\"}", "name": "sentence"})
.    .    SUCC: (35, {"kind": "Property", "inner": "{\"kind\": \"Reference\", \"id\": \"sentence\"}", "name": "sentence"})
.    SUCC: (35, {"body": "{\"body\": \"{\\\"kind\\\": \\\"Property\\\", \\\"inner\\\": \\\"{\\\\\\\"kind\\\\\\\": \\\\\\\"Reference\\\\\\\", \\\\\\\"id\\\\\\\": \\\\\\\"sentence\\\\\\\"}\\\", \\\"name\\\": \\\"sentence\\\"}\", \"kind\": \"Lambda\"}", "kind": "Definition", "id": "sentenceNode"})
.    PARSE: parseDefinition
.    .    PARSE: parseBody
.    .    .    PARSE: parseChoice
.    .    .    .    PARSE: parseExpression
.    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    FAIL: parseProperty; ERR: Invalid identifier character '&'.
.    .    .    .    .    PARSE: parseReference
.    .    .    .    .    FAIL: parseReference; ERR: Invalid identifier character '&'.
.    .    .    .    .    PARSE: parseExtension
.    .    .    .    .    .    PARSE: parseExpression
.    .    .    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    .    .    FAIL: parseProperty; ERR: Expected string '=', got ' '.
.    .    .    .    .    .    .    PARSE: parseReference
.    .    .    .    .    .    .    SUCC: (55, {"kind": "Reference", "id": "word"})
.    .    .    .    .    .    SUCC: (55, {"kind": "Reference", "id": "word"})
.    .    .    .    .    SUCC: (55, {"kind": "Extension", "inner": "{\"kind\": \"Reference\", \"id\": \"word\"}"})
.    .    .    .    SUCC: (55, {"kind": "Extension", "inner": "{\"kind\": \"Reference\", \"id\": \"word\"}"})
.    .    .    FAIL: parseChoice; ERR: Expected at least one pipe.
.    .    .    PARSE: parseSequence
.    .    .    .    PARSE: parseExpression
.    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    FAIL: parseProperty; ERR: Invalid identifier character '&'.
.    .    .    .    .    PARSE: parseReference
.    .    .    .    .    FAIL: parseReference; ERR: Invalid identifier character '&'.
.    .    .    .    .    PARSE: parseExtension
.    .    .    .    .    .    PARSE: parseExpression
.    .    .    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    .    .    FAIL: parseProperty; ERR: Expected string '=', got ' '.
.    .    .    .    .    .    .    PARSE: parseReference
.    .    .    .    .    .    .    SUCC: (55, {"kind": "Reference", "id": "word"})
.    .    .    .    .    .    SUCC: (55, {"kind": "Reference", "id": "word"})
.    .    .    .    .    SUCC: (55, {"kind": "Extension", "inner": "{\"kind\": \"Reference\", \"id\": \"word\"}"})
.    .    .    .    SUCC: (55, {"kind": "Extension", "inner": "{\"kind\": \"Reference\", \"id\": \"word\"}"})
.    .    .    .    PARSE: parseExpression
.    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    FAIL: parseProperty; ERR: Invalid identifier character '*'.
.    .    .    .    .    PARSE: parseReference
.    .    .    .    .    FAIL: parseReference; ERR: Invalid identifier character '*'.
.    .    .    .    .    PARSE: parseExtension
.    .    .    .    .    FAIL: parseExtension; ERR: Expected string '&', got '*'.
.    .    .    .    .    PARSE: parseAdjoinment
.    .    .    .    .    FAIL: parseAdjoinment; ERR: Expected string '$', got '*'.
.    .    .    .    .    PARSE: parseLiteral
.    .    .    .    .    FAIL: parseLiteral; ERR: Expected string '"', got '*'.
.    .    .    .    .    PARSE: parseSet
.    .    .    .    .    FAIL: parseSet; ERR: Expected string '<', got '*'.
.    .    .    .    .    PARSE: parseOptional
.    .    .    .    .    FAIL: parseOptional; ERR: Expected string '?', got '*'.
.    .    .    .    .    PARSE: parseOnePlus
.    .    .    .    .    FAIL: parseOnePlus; ERR: Expected string '+', got '*'.
.    .    .    .    .    PARSE: parseZeroPlus
.    .    .    .    .    .    PARSE: parseExpression
.    .    .    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    .    .    FAIL: parseProperty; ERR: Invalid identifier character '['.
.    .    .    .    .    .    .    PARSE: parseReference
.    .    .    .    .    .    .    FAIL: parseReference; ERR: Invalid identifier character '['.
.    .    .    .    .    .    .    PARSE: parseExtension
.    .    .    .    .    .    .    FAIL: parseExtension; ERR: Expected string '&', got '['.
.    .    .    .    .    .    .    PARSE: parseAdjoinment
.    .    .    .    .    .    .    FAIL: parseAdjoinment; ERR: Expected string '$', got '['.
.    .    .    .    .    .    .    PARSE: parseLiteral
.    .    .    .    .    .    .    FAIL: parseLiteral; ERR: Expected string '"', got '['.
.    .    .    .    .    .    .    PARSE: parseSet
.    .    .    .    .    .    .    FAIL: parseSet; ERR: Expected string '<', got '['.
.    .    .    .    .    .    .    PARSE: parseOptional
.    .    .    .    .    .    .    FAIL: parseOptional; ERR: Expected string '?', got '['.
.    .    .    .    .    .    .    PARSE: parseOnePlus
.    .    .    .    .    .    .    FAIL: parseOnePlus; ERR: Expected string '+', got '['.
.    .    .    .    .    .    .    PARSE: parseZeroPlus
.    .    .    .    .    .    .    FAIL: parseZeroPlus; ERR: Expected string '*', got '['.
.    .    .    .    .    .    .    PARSE: parseGuard
.    .    .    .    .    .    .    FAIL: parseGuard; ERR: Expected string '!', got '['.
.    .    .    .    .    .    .    PARSE: parseBrackets
.    .    .    .    .    .    .    .    PARSE: parseBody
.    .    .    .    .    .    .    .    .    PARSE: parseChoice
.    .    .    .    .    .    .    .    .    .    PARSE: parseExpression
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    .    .    .    .    .    .    FAIL: parseProperty; ERR: Invalid identifier character '"'.
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseReference
.    .    .    .    .    .    .    .    .    .    .    FAIL: parseReference; ERR: Invalid identifier character '"'.
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseExtension
.    .    .    .    .    .    .    .    .    .    .    FAIL: parseExtension; ERR: Expected string '&', got '"'.
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseAdjoinment
.    .    .    .    .    .    .    .    .    .    .    FAIL: parseAdjoinment; ERR: Expected string '$', got '"'.
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseLiteral
.    .    .    .    .    .    .    .    .    .    .    SUCC: (62, {"kind": "Literal", "text": ", "})
.    .    .    .    .    .    .    .    .    .    SUCC: (62, {"kind": "Literal", "text": ", "})
.    .    .    .    .    .    .    .    .    FAIL: parseChoice; ERR: Expected at least one pipe.
.    .    .    .    .    .    .    .    .    PARSE: parseSequence
.    .    .    .    .    .    .    .    .    .    PARSE: parseExpression
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    .    .    .    .    .    .    FAIL: parseProperty; ERR: Invalid identifier character '"'.
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseReference
.    .    .    .    .    .    .    .    .    .    .    FAIL: parseReference; ERR: Invalid identifier character '"'.
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseExtension
.    .    .    .    .    .    .    .    .    .    .    FAIL: parseExtension; ERR: Expected string '&', got '"'.
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseAdjoinment
.    .    .    .    .    .    .    .    .    .    .    FAIL: parseAdjoinment; ERR: Expected string '$', got '"'.
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseLiteral
.    .    .    .    .    .    .    .    .    .    .    SUCC: (62, {"kind": "Literal", "text": ", "})
.    .    .    .    .    .    .    .    .    .    SUCC: (62, {"kind": "Literal", "text": ", "})
.    .    .    .    .    .    .    .    .    .    PARSE: parseExpression
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    .    .    .    .    .    .    FAIL: parseProperty; ERR: Invalid identifier character '&'.
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseReference
.    .    .    .    .    .    .    .    .    .    .    FAIL: parseReference; ERR: Invalid identifier character '&'.
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseExtension
.    .    .    .    .    .    .    .    .    .    .    .    PARSE: parseExpression
.    .    .    .    .    .    .    .    .    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    .    .    .    .    .    .    .    .    FAIL: parseProperty; ERR: Expected string '=', got ']'.
.    .    .    .    .    .    .    .    .    .    .    .    .    PARSE: parseReference
.    .    .    .    .    .    .    .    .    .    .    .    .    SUCC: (68, {"kind": "Reference", "id": "word"})
.    .    .    .    .    .    .    .    .    .    .    .    SUCC: (68, {"kind": "Reference", "id": "word"})
.    .    .    .    .    .    .    .    .    .    .    SUCC: (68, {"kind": "Extension", "inner": "{\"kind\": \"Reference\", \"id\": \"word\"}"})
.    .    .    .    .    .    .    .    .    .    SUCC: (68, {"kind": "Extension", "inner": "{\"kind\": \"Reference\", \"id\": \"word\"}"})
.    .    .    .    .    .    .    .    .    .    PARSE: parseExpression
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    .    .    .    .    .    .    FAIL: parseProperty; ERR: Invalid identifier character ']'.
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseReference
.    .    .    .    .    .    .    .    .    .    .    FAIL: parseReference; ERR: Invalid identifier character ']'.
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseExtension
.    .    .    .    .    .    .    .    .    .    .    FAIL: parseExtension; ERR: Expected string '&', got ']'.
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseAdjoinment
.    .    .    .    .    .    .    .    .    .    .    FAIL: parseAdjoinment; ERR: Expected string '$', got ']'.
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseLiteral
.    .    .    .    .    .    .    .    .    .    .    FAIL: parseLiteral; ERR: Expected string '"', got ']'.
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseSet
.    .    .    .    .    .    .    .    .    .    .    FAIL: parseSet; ERR: Expected string '<', got ']'.
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseOptional
.    .    .    .    .    .    .    .    .    .    .    FAIL: parseOptional; ERR: Expected string '?', got ']'.
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseOnePlus
.    .    .    .    .    .    .    .    .    .    .    FAIL: parseOnePlus; ERR: Expected string '+', got ']'.
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseZeroPlus
.    .    .    .    .    .    .    .    .    .    .    FAIL: parseZeroPlus; ERR: Expected string '*', got ']'.
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseGuard
.    .    .    .    .    .    .    .    .    .    .    FAIL: parseGuard; ERR: Expected string '!', got ']'.
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseBrackets
.    .    .    .    .    .    .    .    .    .    .    FAIL: parseBrackets; ERR: Expected string '[', got ']'.
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseLambda
.    .    .    .    .    .    .    .    .    .    .    FAIL: parseLambda; ERR: Expected string '{', got ']'.
.    .    .    .    .    .    .    .    .    .    FAIL: parseExpression; ERR: Matched no option.
.    .    .    .    .    .    .    .    .    SUCC: (68, {"kind": "Sequence", "contents": "@[{\"kind\": \"Literal\", \"text\": \", \"}, {\"kind\": \"Extension\", \"inner\": \"{\\\"kind\\\": \\\"Reference\\\", \\\"id\\\": \\\"word\\\"}\"}]"})
.    .    .    .    .    .    .    .    SUCC: (68, {"kind": "Sequence", "contents": "@[{\"kind\": \"Literal\", \"text\": \", \"}, {\"kind\": \"Extension\", \"inner\": \"{\\\"kind\\\": \\\"Reference\\\", \\\"id\\\": \\\"word\\\"}\"}]"})
.    .    .    .    .    .    .    SUCC: (69, {"kind": "Sequence", "contents": "@[{\"kind\": \"Literal\", \"text\": \", \"}, {\"kind\": \"Extension\", \"inner\": \"{\\\"kind\\\": \\\"Reference\\\", \\\"id\\\": \\\"word\\\"}\"}]"})
.    .    .    .    .    .    SUCC: (69, {"kind": "Sequence", "contents": "@[{\"kind\": \"Literal\", \"text\": \", \"}, {\"kind\": \"Extension\", \"inner\": \"{\\\"kind\\\": \\\"Reference\\\", \\\"id\\\": \\\"word\\\"}\"}]"})
.    .    .    .    .    SUCC: (69, {"kind": "Optional", "inner": "{\"kind\": \"OnePlus\", \"inner\": \"{\\\"kind\\\": \\\"Sequence\\\", \\\"contents\\\": \\\"@[{\\\\\\\"kind\\\\\\\": \\\\\\\"Literal\\\\\\\", \\\\\\\"text\\\\\\\": \\\\\\\", \\\\\\\"}, {\\\\\\\"kind\\\\\\\": \\\\\\\"Extension\\\\\\\", \\\\\\\"inner\\\\\\\": \\\\\\\"{\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Reference\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"word\\\\\\\\\\\\\\\"}\\\\\\\"}]\\\"}\"}"})
.    .    .    .    SUCC: (69, {"kind": "Optional", "inner": "{\"kind\": \"OnePlus\", \"inner\": \"{\\\"kind\\\": \\\"Sequence\\\", \\\"contents\\\": \\\"@[{\\\\\\\"kind\\\\\\\": \\\\\\\"Literal\\\\\\\", \\\\\\\"text\\\\\\\": \\\\\\\", \\\\\\\"}, {\\\\\\\"kind\\\\\\\": \\\\\\\"Extension\\\\\\\", \\\\\\\"inner\\\\\\\": \\\\\\\"{\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Reference\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"word\\\\\\\\\\\\\\\"}\\\\\\\"}]\\\"}\"}"})
.    .    .    .    PARSE: parseExpression
.    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    FAIL: parseProperty; ERR: Invalid identifier character '
'.
.    .    .    .    .    PARSE: parseReference
.    .    .    .    .    FAIL: parseReference; ERR: Invalid identifier character '
'.
.    .    .    .    .    PARSE: parseExtension
.    .    .    .    .    FAIL: parseExtension; ERR: Expected string '&', got '
'.
.    .    .    .    .    PARSE: parseAdjoinment
.    .    .    .    .    FAIL: parseAdjoinment; ERR: Expected string '$', got '
'.
.    .    .    .    .    PARSE: parseLiteral
.    .    .    .    .    FAIL: parseLiteral; ERR: Expected string '"', got '
'.
.    .    .    .    .    PARSE: parseSet
.    .    .    .    .    FAIL: parseSet; ERR: Expected string '<', got '
'.
.    .    .    .    .    PARSE: parseOptional
.    .    .    .    .    FAIL: parseOptional; ERR: Expected string '?', got '
'.
.    .    .    .    .    PARSE: parseOnePlus
.    .    .    .    .    FAIL: parseOnePlus; ERR: Expected string '+', got '
'.
.    .    .    .    .    PARSE: parseZeroPlus
.    .    .    .    .    FAIL: parseZeroPlus; ERR: Expected string '*', got '
'.
.    .    .    .    .    PARSE: parseGuard
.    .    .    .    .    FAIL: parseGuard; ERR: Expected string '!', got '
'.
.    .    .    .    .    PARSE: parseBrackets
.    .    .    .    .    FAIL: parseBrackets; ERR: Expected string '[', got '
'.
.    .    .    .    .    PARSE: parseLambda
.    .    .    .    .    FAIL: parseLambda; ERR: Expected string '{', got '
'.
.    .    .    .    FAIL: parseExpression; ERR: Matched no option.
.    .    .    SUCC: (69, {"kind": "Sequence", "contents": "@[{\"kind\": \"Extension\", \"inner\": \"{\\\"kind\\\": \\\"Reference\\\", \\\"id\\\": \\\"word\\\"}\"}, {\"kind\": \"Optional\", \"inner\": \"{\\\"kind\\\": \\\"OnePlus\\\", \\\"inner\\\": \\\"{\\\\\\\"kind\\\\\\\": \\\\\\\"Sequence\\\\\\\", \\\\\\\"contents\\\\\\\": \\\\\\\"@[{\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Literal\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"}, {\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Extension\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"inner\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Reference\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"word\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"}\\\\\\\\\\\\\\\"}]\\\\\\\"}\\\"}\"}]"})
.    .    SUCC: (69, {"kind": "Sequence", "contents": "@[{\"kind\": \"Extension\", \"inner\": \"{\\\"kind\\\": \\\"Reference\\\", \\\"id\\\": \\\"word\\\"}\"}, {\"kind\": \"Optional\", \"inner\": \"{\\\"kind\\\": \\\"OnePlus\\\", \\\"inner\\\": \\\"{\\\\\\\"kind\\\\\\\": \\\\\\\"Sequence\\\\\\\", \\\\\\\"contents\\\\\\\": \\\\\\\"@[{\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Literal\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"}, {\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Extension\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"inner\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Reference\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"word\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"}\\\\\\\\\\\\\\\"}]\\\\\\\"}\\\"}\"}]"})
.    SUCC: (69, {"body": "{\"body\": \"{\\\"kind\\\": \\\"Sequence\\\", \\\"contents\\\": \\\"@[{\\\\\\\"kind\\\\\\\": \\\\\\\"Extension\\\\\\\", \\\\\\\"inner\\\\\\\": \\\\\\\"{\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Reference\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"word\\\\\\\\\\\\\\\"}\\\\\\\"}, {\\\\\\\"kind\\\\\\\": \\\\\\\"Optional\\\\\\\", \\\\\\\"inner\\\\\\\": \\\\\\\"{\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"OnePlus\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"inner\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Sequence\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"contents\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"@[{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Literal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"}, {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Extension\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"inner\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Reference\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"word\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"}]\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"}\\\\\\\\\\\\\\\"}\\\\\\\"}]\\\"}\", \"kind\": \"Lambda\"}", "kind": "Definition", "id": "sentence"})
.    PARSE: parseDefinition
.    .    PARSE: parseBody
.    .    .    PARSE: parseChoice
.    .    .    .    PARSE: parseExpression
.    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    .    PARSE: parseExpression
.    .    .    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    .    .    FAIL: parseProperty; ERR: Invalid identifier character '*'.
.    .    .    .    .    .    .    PARSE: parseReference
.    .    .    .    .    .    .    FAIL: parseReference; ERR: Invalid identifier character '*'.
.    .    .    .    .    .    .    PARSE: parseExtension
.    .    .    .    .    .    .    FAIL: parseExtension; ERR: Expected string '&', got '*'.
.    .    .    .    .    .    .    PARSE: parseAdjoinment
.    .    .    .    .    .    .    FAIL: parseAdjoinment; ERR: Expected string '$', got '*'.
.    .    .    .    .    .    .    PARSE: parseLiteral
.    .    .    .    .    .    .    FAIL: parseLiteral; ERR: Expected string '"', got '*'.
.    .    .    .    .    .    .    PARSE: parseSet
.    .    .    .    .    .    .    FAIL: parseSet; ERR: Expected string '<', got '*'.
.    .    .    .    .    .    .    PARSE: parseOptional
.    .    .    .    .    .    .    FAIL: parseOptional; ERR: Expected string '?', got '*'.
.    .    .    .    .    .    .    PARSE: parseOnePlus
.    .    .    .    .    .    .    FAIL: parseOnePlus; ERR: Expected string '+', got '*'.
.    .    .    .    .    .    .    PARSE: parseZeroPlus
.    .    .    .    .    .    .    .    PARSE: parseExpression
.    .    .    .    .    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    .    .    .    .    FAIL: parseProperty; ERR: Invalid identifier character '<'.
.    .    .    .    .    .    .    .    .    PARSE: parseReference
.    .    .    .    .    .    .    .    .    FAIL: parseReference; ERR: Invalid identifier character '<'.
.    .    .    .    .    .    .    .    .    PARSE: parseExtension
.    .    .    .    .    .    .    .    .    FAIL: parseExtension; ERR: Expected string '&', got '<'.
.    .    .    .    .    .    .    .    .    PARSE: parseAdjoinment
.    .    .    .    .    .    .    .    .    FAIL: parseAdjoinment; ERR: Expected string '$', got '<'.
.    .    .    .    .    .    .    .    .    PARSE: parseLiteral
.    .    .    .    .    .    .    .    .    FAIL: parseLiteral; ERR: Expected string '"', got '<'.
.    .    .    .    .    .    .    .    .    PARSE: parseSet
.    .    .    .    .    .    .    .    .    SUCC: (113, {"kind": "Set", "characters": "abcdefghijklmnopqrstuvwxyz"})
.    .    .    .    .    .    .    .    SUCC: (113, {"kind": "Set", "characters": "abcdefghijklmnopqrstuvwxyz"})
.    .    .    .    .    .    .    SUCC: (113, {"kind": "Optional", "inner": "{\"kind\": \"OnePlus\", \"inner\": \"{\\\"kind\\\": \\\"Set\\\", \\\"characters\\\": \\\"abcdefghijklmnopqrstuvwxyz\\\"}\"}"})
.    .    .    .    .    .    SUCC: (113, {"kind": "Optional", "inner": "{\"kind\": \"OnePlus\", \"inner\": \"{\\\"kind\\\": \\\"Set\\\", \\\"characters\\\": \\\"abcdefghijklmnopqrstuvwxyz\\\"}\"}"})
.    .    .    .    .    SUCC: (113, {"kind": "Property", "inner": "{\"kind\": \"Optional\", \"inner\": \"{\\\"kind\\\": \\\"OnePlus\\\", \\\"inner\\\": \\\"{\\\\\\\"kind\\\\\\\": \\\\\\\"Set\\\\\\\", \\\\\\\"characters\\\\\\\": \\\\\\\"abcdefghijklmnopqrstuvwxyz\\\\\\\"}\\\"}\"}", "name": "val"})
.    .    .    .    SUCC: (113, {"kind": "Property", "inner": "{\"kind\": \"Optional\", \"inner\": \"{\\\"kind\\\": \\\"OnePlus\\\", \\\"inner\\\": \\\"{\\\\\\\"kind\\\\\\\": \\\\\\\"Set\\\\\\\", \\\\\\\"characters\\\\\\\": \\\\\\\"abcdefghijklmnopqrstuvwxyz\\\\\\\"}\\\"}\"}", "name": "val"})
.    .    .    FAIL: parseChoice; ERR: Expected at least one pipe.
.    .    .    PARSE: parseSequence
.    .    .    .    PARSE: parseExpression
.    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    .    PARSE: parseExpression
.    .    .    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    .    .    FAIL: parseProperty; ERR: Invalid identifier character '*'.
.    .    .    .    .    .    .    PARSE: parseReference
.    .    .    .    .    .    .    FAIL: parseReference; ERR: Invalid identifier character '*'.
.    .    .    .    .    .    .    PARSE: parseExtension
.    .    .    .    .    .    .    FAIL: parseExtension; ERR: Expected string '&', got '*'.
.    .    .    .    .    .    .    PARSE: parseAdjoinment
.    .    .    .    .    .    .    FAIL: parseAdjoinment; ERR: Expected string '$', got '*'.
.    .    .    .    .    .    .    PARSE: parseLiteral
.    .    .    .    .    .    .    FAIL: parseLiteral; ERR: Expected string '"', got '*'.
.    .    .    .    .    .    .    PARSE: parseSet
.    .    .    .    .    .    .    FAIL: parseSet; ERR: Expected string '<', got '*'.
.    .    .    .    .    .    .    PARSE: parseOptional
.    .    .    .    .    .    .    FAIL: parseOptional; ERR: Expected string '?', got '*'.
.    .    .    .    .    .    .    PARSE: parseOnePlus
.    .    .    .    .    .    .    FAIL: parseOnePlus; ERR: Expected string '+', got '*'.
.    .    .    .    .    .    .    PARSE: parseZeroPlus
.    .    .    .    .    .    .    .    PARSE: parseExpression
.    .    .    .    .    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    .    .    .    .    FAIL: parseProperty; ERR: Invalid identifier character '<'.
.    .    .    .    .    .    .    .    .    PARSE: parseReference
.    .    .    .    .    .    .    .    .    FAIL: parseReference; ERR: Invalid identifier character '<'.
.    .    .    .    .    .    .    .    .    PARSE: parseExtension
.    .    .    .    .    .    .    .    .    FAIL: parseExtension; ERR: Expected string '&', got '<'.
.    .    .    .    .    .    .    .    .    PARSE: parseAdjoinment
.    .    .    .    .    .    .    .    .    FAIL: parseAdjoinment; ERR: Expected string '$', got '<'.
.    .    .    .    .    .    .    .    .    PARSE: parseLiteral
.    .    .    .    .    .    .    .    .    FAIL: parseLiteral; ERR: Expected string '"', got '<'.
.    .    .    .    .    .    .    .    .    PARSE: parseSet
.    .    .    .    .    .    .    .    .    SUCC: (113, {"kind": "Set", "characters": "abcdefghijklmnopqrstuvwxyz"})
.    .    .    .    .    .    .    .    SUCC: (113, {"kind": "Set", "characters": "abcdefghijklmnopqrstuvwxyz"})
.    .    .    .    .    .    .    SUCC: (113, {"kind": "Optional", "inner": "{\"kind\": \"OnePlus\", \"inner\": \"{\\\"kind\\\": \\\"Set\\\", \\\"characters\\\": \\\"abcdefghijklmnopqrstuvwxyz\\\"}\"}"})
.    .    .    .    .    .    SUCC: (113, {"kind": "Optional", "inner": "{\"kind\": \"OnePlus\", \"inner\": \"{\\\"kind\\\": \\\"Set\\\", \\\"characters\\\": \\\"abcdefghijklmnopqrstuvwxyz\\\"}\"}"})
.    .    .    .    .    SUCC: (113, {"kind": "Property", "inner": "{\"kind\": \"Optional\", \"inner\": \"{\\\"kind\\\": \\\"OnePlus\\\", \\\"inner\\\": \\\"{\\\\\\\"kind\\\\\\\": \\\\\\\"Set\\\\\\\", \\\\\\\"characters\\\\\\\": \\\\\\\"abcdefghijklmnopqrstuvwxyz\\\\\\\"}\\\"}\"}", "name": "val"})
.    .    .    .    SUCC: (113, {"kind": "Property", "inner": "{\"kind\": \"Optional\", \"inner\": \"{\\\"kind\\\": \\\"OnePlus\\\", \\\"inner\\\": \\\"{\\\\\\\"kind\\\\\\\": \\\\\\\"Set\\\\\\\", \\\\\\\"characters\\\\\\\": \\\\\\\"abcdefghijklmnopqrstuvwxyz\\\\\\\"}\\\"}\"}", "name": "val"})
.    .    .    .    PARSE: parseExpression
.    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    FAIL: parseProperty; ERR: Invalid identifier character '
'.
.    .    .    .    .    PARSE: parseReference
.    .    .    .    .    FAIL: parseReference; ERR: Invalid identifier character '
'.
.    .    .    .    .    PARSE: parseExtension
.    .    .    .    .    FAIL: parseExtension; ERR: Expected string '&', got '
'.
.    .    .    .    .    PARSE: parseAdjoinment
.    .    .    .    .    FAIL: parseAdjoinment; ERR: Expected string '$', got '
'.
.    .    .    .    .    PARSE: parseLiteral
.    .    .    .    .    FAIL: parseLiteral; ERR: Expected string '"', got '
'.
.    .    .    .    .    PARSE: parseSet
.    .    .    .    .    FAIL: parseSet; ERR: Expected string '<', got '
'.
.    .    .    .    .    PARSE: parseOptional
.    .    .    .    .    FAIL: parseOptional; ERR: Expected string '?', got '
'.
.    .    .    .    .    PARSE: parseOnePlus
.    .    .    .    .    FAIL: parseOnePlus; ERR: Expected string '+', got '
'.
.    .    .    .    .    PARSE: parseZeroPlus
.    .    .    .    .    FAIL: parseZeroPlus; ERR: Expected string '*', got '
'.
.    .    .    .    .    PARSE: parseGuard
.    .    .    .    .    FAIL: parseGuard; ERR: Expected string '!', got '
'.
.    .    .    .    .    PARSE: parseBrackets
.    .    .    .    .    FAIL: parseBrackets; ERR: Expected string '[', got '
'.
.    .    .    .    .    PARSE: parseLambda
.    .    .    .    .    FAIL: parseLambda; ERR: Expected string '{', got '
'.
.    .    .    .    FAIL: parseExpression; ERR: Matched no option.
.    .    .    FAIL: parseSequence; ERR: Expected at least two simple expressions.
.    .    .    PARSE: parseExpression
.    .    .    .    PARSE: parseProperty
.    .    .    .    .    PARSE: parseExpression
.    .    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    .    FAIL: parseProperty; ERR: Invalid identifier character '*'.
.    .    .    .    .    .    PARSE: parseReference
.    .    .    .    .    .    FAIL: parseReference; ERR: Invalid identifier character '*'.
.    .    .    .    .    .    PARSE: parseExtension
.    .    .    .    .    .    FAIL: parseExtension; ERR: Expected string '&', got '*'.
.    .    .    .    .    .    PARSE: parseAdjoinment
.    .    .    .    .    .    FAIL: parseAdjoinment; ERR: Expected string '$', got '*'.
.    .    .    .    .    .    PARSE: parseLiteral
.    .    .    .    .    .    FAIL: parseLiteral; ERR: Expected string '"', got '*'.
.    .    .    .    .    .    PARSE: parseSet
.    .    .    .    .    .    FAIL: parseSet; ERR: Expected string '<', got '*'.
.    .    .    .    .    .    PARSE: parseOptional
.    .    .    .    .    .    FAIL: parseOptional; ERR: Expected string '?', got '*'.
.    .    .    .    .    .    PARSE: parseOnePlus
.    .    .    .    .    .    FAIL: parseOnePlus; ERR: Expected string '+', got '*'.
.    .    .    .    .    .    PARSE: parseZeroPlus
.    .    .    .    .    .    .    PARSE: parseExpression
.    .    .    .    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    .    .    .    FAIL: parseProperty; ERR: Invalid identifier character '<'.
.    .    .    .    .    .    .    .    PARSE: parseReference
.    .    .    .    .    .    .    .    FAIL: parseReference; ERR: Invalid identifier character '<'.
.    .    .    .    .    .    .    .    PARSE: parseExtension
.    .    .    .    .    .    .    .    FAIL: parseExtension; ERR: Expected string '&', got '<'.
.    .    .    .    .    .    .    .    PARSE: parseAdjoinment
.    .    .    .    .    .    .    .    FAIL: parseAdjoinment; ERR: Expected string '$', got '<'.
.    .    .    .    .    .    .    .    PARSE: parseLiteral
.    .    .    .    .    .    .    .    FAIL: parseLiteral; ERR: Expected string '"', got '<'.
.    .    .    .    .    .    .    .    PARSE: parseSet
.    .    .    .    .    .    .    .    SUCC: (113, {"kind": "Set", "characters": "abcdefghijklmnopqrstuvwxyz"})
.    .    .    .    .    .    .    SUCC: (113, {"kind": "Set", "characters": "abcdefghijklmnopqrstuvwxyz"})
.    .    .    .    .    .    SUCC: (113, {"kind": "Optional", "inner": "{\"kind\": \"OnePlus\", \"inner\": \"{\\\"kind\\\": \\\"Set\\\", \\\"characters\\\": \\\"abcdefghijklmnopqrstuvwxyz\\\"}\"}"})
.    .    .    .    .    SUCC: (113, {"kind": "Optional", "inner": "{\"kind\": \"OnePlus\", \"inner\": \"{\\\"kind\\\": \\\"Set\\\", \\\"characters\\\": \\\"abcdefghijklmnopqrstuvwxyz\\\"}\"}"})
.    .    .    .    SUCC: (113, {"kind": "Property", "inner": "{\"kind\": \"Optional\", \"inner\": \"{\\\"kind\\\": \\\"OnePlus\\\", \\\"inner\\\": \\\"{\\\\\\\"kind\\\\\\\": \\\\\\\"Set\\\\\\\", \\\\\\\"characters\\\\\\\": \\\\\\\"abcdefghijklmnopqrstuvwxyz\\\\\\\"}\\\"}\"}", "name": "val"})
.    .    .    SUCC: (113, {"kind": "Property", "inner": "{\"kind\": \"Optional\", \"inner\": \"{\\\"kind\\\": \\\"OnePlus\\\", \\\"inner\\\": \\\"{\\\\\\\"kind\\\\\\\": \\\\\\\"Set\\\\\\\", \\\\\\\"characters\\\\\\\": \\\\\\\"abcdefghijklmnopqrstuvwxyz\\\\\\\"}\\\"}\"}", "name": "val"})
.    .    SUCC: (113, {"kind": "Property", "inner": "{\"kind\": \"Optional\", \"inner\": \"{\\\"kind\\\": \\\"OnePlus\\\", \\\"inner\\\": \\\"{\\\\\\\"kind\\\\\\\": \\\\\\\"Set\\\\\\\", \\\\\\\"characters\\\\\\\": \\\\\\\"abcdefghijklmnopqrstuvwxyz\\\\\\\"}\\\"}\"}", "name": "val"})
.    SUCC: (113, {"body": "{\"body\": \"{\\\"kind\\\": \\\"Property\\\", \\\"inner\\\": \\\"{\\\\\\\"kind\\\\\\\": \\\\\\\"Optional\\\\\\\", \\\\\\\"inner\\\\\\\": \\\\\\\"{\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"OnePlus\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"inner\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Set\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"characters\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"abcdefghijklmnopqrstuvwxyz\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"}\\\\\\\\\\\\\\\"}\\\\\\\"}\\\", \\\"name\\\": \\\"val\\\"}\", \"kind\": \"Lambda\"}", "kind": "Definition", "id": "word"})
SUCC: (118, {"kind": "Program", "definitions": "@[{\"body\": \"{\\\"body\\\": \\\"{\\\\\\\"kind\\\\\\\": \\\\\\\"Property\\\\\\\", \\\\\\\"inner\\\\\\\": \\\\\\\"{\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Reference\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"sentence\\\\\\\\\\\\\\\"}\\\\\\\", \\\\\\\"name\\\\\\\": \\\\\\\"sentence\\\\\\\"}\\\", \\\"kind\\\": \\\"Lambda\\\"}\", \"kind\": \"Definition\", \"id\": \"sentenceNode\"}, {\"body\": \"{\\\"body\\\": \\\"{\\\\\\\"kind\\\\\\\": \\\\\\\"Sequence\\\\\\\", \\\\\\\"contents\\\\\\\": \\\\\\\"@[{\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Extension\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"inner\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Reference\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"word\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"}\\\\\\\\\\\\\\\"}, {\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Optional\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"inner\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"OnePlus\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"inner\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Sequence\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"contents\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"@[{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Literal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"}, {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Extension\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"inner\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"kindeferenceidword\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"}]\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"}\\\\\\\\\\\\\\\"}]\\\\\\\"}\\\", \\\"kind\\\": \\\"Lambda\\\"}\", \"kind\": \"Definition\", \"id\": \"sentence\"}, {\"body\": \"{\\\"body\\\": \\\"{\\\\\\\"kind\\\\\\\": \\\\\\\"Property\\\\\\\", \\\\\\\"inner\\\\\\\": \\\\\\\"{\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Optional\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"inner\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"OnePlus\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"inner\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Set\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"characters\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"abcdefghijklmnopqrstuvwxyz\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"}\\\\\\\\\\\\\\\"}\\\\\\\", \\\\\\\"name\\\\\\\": \\\\\\\"val\\\\\\\"}\\\", \\\"kind\\\": \\\"Lambda\\\"}\", \"kind\": \"Definition\", \"id\": \"word\"}]"})
PARSE: parseProgram
.    PARSE: parseDefinition
.    .    PARSE: parseBody
.    .    .    PARSE: parseChoice
.    .    .    .    PARSE: parseExpression
.    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    .    PARSE: parseExpression
.    .    .    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    .    .    FAIL: parseProperty; ERR: Expected string '=', got '
'.
.    .    .    .    .    .    .    PARSE: parseReference
.    .    .    .    .    .    .    SUCC: (35, {"kind": "Reference", "id": "sentence"})
.    .    .    .    .    .    SUCC: (35, {"kind": "Reference", "id": "sentence"})
.    .    .    .    .    SUCC: (35, {"kind": "Property", "inner": "{\"kind\": \"Reference\", \"id\": \"sentence\"}", "name": "sentence"})
.    .    .    .    SUCC: (35, {"kind": "Property", "inner": "{\"kind\": \"Reference\", \"id\": \"sentence\"}", "name": "sentence"})
.    .    .    FAIL: parseChoice; ERR: Expected at least one pipe.
.    .    .    PARSE: parseSequence
.    .    .    .    PARSE: parseExpression
.    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    .    PARSE: parseExpression
.    .    .    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    .    .    FAIL: parseProperty; ERR: Expected string '=', got '
'.
.    .    .    .    .    .    .    PARSE: parseReference
.    .    .    .    .    .    .    SUCC: (35, {"kind": "Reference", "id": "sentence"})
.    .    .    .    .    .    SUCC: (35, {"kind": "Reference", "id": "sentence"})
.    .    .    .    .    SUCC: (35, {"kind": "Property", "inner": "{\"kind\": \"Reference\", \"id\": \"sentence\"}", "name": "sentence"})
.    .    .    .    SUCC: (35, {"kind": "Property", "inner": "{\"kind\": \"Reference\", \"id\": \"sentence\"}", "name": "sentence"})
.    .    .    .    PARSE: parseExpression
.    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    FAIL: parseProperty; ERR: Invalid identifier character '
'.
.    .    .    .    .    PARSE: parseReference
.    .    .    .    .    FAIL: parseReference; ERR: Invalid identifier character '
'.
.    .    .    .    .    PARSE: parseExtension
.    .    .    .    .    FAIL: parseExtension; ERR: Expected string '&', got '
'.
.    .    .    .    .    PARSE: parseAdjoinment
.    .    .    .    .    FAIL: parseAdjoinment; ERR: Expected string '$', got '
'.
.    .    .    .    .    PARSE: parseLiteral
.    .    .    .    .    FAIL: parseLiteral; ERR: Expected string '"', got '
'.
.    .    .    .    .    PARSE: parseSet
.    .    .    .    .    FAIL: parseSet; ERR: Expected string '<', got '
'.
.    .    .    .    .    PARSE: parseOptional
.    .    .    .    .    FAIL: parseOptional; ERR: Expected string '?', got '
'.
.    .    .    .    .    PARSE: parseOnePlus
.    .    .    .    .    FAIL: parseOnePlus; ERR: Expected string '+', got '
'.
.    .    .    .    .    PARSE: parseZeroPlus
.    .    .    .    .    FAIL: parseZeroPlus; ERR: Expected string '*', got '
'.
.    .    .    .    .    PARSE: parseGuard
.    .    .    .    .    FAIL: parseGuard; ERR: Expected string '!', got '
'.
.    .    .    .    .    PARSE: parseBrackets
.    .    .    .    .    FAIL: parseBrackets; ERR: Expected string '[', got '
'.
.    .    .    .    .    PARSE: parseLambda
.    .    .    .    .    FAIL: parseLambda; ERR: Expected string '{', got '
'.
.    .    .    .    FAIL: parseExpression; ERR: Matched no option.
.    .    .    FAIL: parseSequence; ERR: Expected at least two simple expressions.
.    .    .    PARSE: parseExpression
.    .    .    .    PARSE: parseProperty
.    .    .    .    .    PARSE: parseExpression
.    .    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    .    FAIL: parseProperty; ERR: Expected string '=', got '
'.
.    .    .    .    .    .    PARSE: parseReference
.    .    .    .    .    .    SUCC: (35, {"kind": "Reference", "id": "sentence"})
.    .    .    .    .    SUCC: (35, {"kind": "Reference", "id": "sentence"})
.    .    .    .    SUCC: (35, {"kind": "Property", "inner": "{\"kind\": \"Reference\", \"id\": \"sentence\"}", "name": "sentence"})
.    .    .    SUCC: (35, {"kind": "Property", "inner": "{\"kind\": \"Reference\", \"id\": \"sentence\"}", "name": "sentence"})
.    .    SUCC: (35, {"kind": "Property", "inner": "{\"kind\": \"Reference\", \"id\": \"sentence\"}", "name": "sentence"})
.    SUCC: (35, {"body": "{\"body\": \"{\\\"kind\\\": \\\"Property\\\", \\\"inner\\\": \\\"{\\\\\\\"kind\\\\\\\": \\\\\\\"Reference\\\\\\\", \\\\\\\"id\\\\\\\": \\\\\\\"sentence\\\\\\\"}\\\", \\\"name\\\": \\\"sentence\\\"}\", \"kind\": \"Lambda\"}", "kind": "Definition", "id": "sentenceNode"})
.    PARSE: parseDefinition
.    .    PARSE: parseBody
.    .    .    PARSE: parseChoice
.    .    .    .    PARSE: parseExpression
.    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    FAIL: parseProperty; ERR: Invalid identifier character '&'.
.    .    .    .    .    PARSE: parseReference
.    .    .    .    .    FAIL: parseReference; ERR: Invalid identifier character '&'.
.    .    .    .    .    PARSE: parseExtension
.    .    .    .    .    .    PARSE: parseExpression
.    .    .    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    .    .    FAIL: parseProperty; ERR: Expected string '=', got ' '.
.    .    .    .    .    .    .    PARSE: parseReference
.    .    .    .    .    .    .    SUCC: (55, {"kind": "Reference", "id": "word"})
.    .    .    .    .    .    SUCC: (55, {"kind": "Reference", "id": "word"})
.    .    .    .    .    SUCC: (55, {"kind": "Extension", "inner": "{\"kind\": \"Reference\", \"id\": \"word\"}"})
.    .    .    .    SUCC: (55, {"kind": "Extension", "inner": "{\"kind\": \"Reference\", \"id\": \"word\"}"})
.    .    .    FAIL: parseChoice; ERR: Expected at least one pipe.
.    .    .    PARSE: parseSequence
.    .    .    .    PARSE: parseExpression
.    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    FAIL: parseProperty; ERR: Invalid identifier character '&'.
.    .    .    .    .    PARSE: parseReference
.    .    .    .    .    FAIL: parseReference; ERR: Invalid identifier character '&'.
.    .    .    .    .    PARSE: parseExtension
.    .    .    .    .    .    PARSE: parseExpression
.    .    .    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    .    .    FAIL: parseProperty; ERR: Expected string '=', got ' '.
.    .    .    .    .    .    .    PARSE: parseReference
.    .    .    .    .    .    .    SUCC: (55, {"kind": "Reference", "id": "word"})
.    .    .    .    .    .    SUCC: (55, {"kind": "Reference", "id": "word"})
.    .    .    .    .    SUCC: (55, {"kind": "Extension", "inner": "{\"kind\": \"Reference\", \"id\": \"word\"}"})
.    .    .    .    SUCC: (55, {"kind": "Extension", "inner": "{\"kind\": \"Reference\", \"id\": \"word\"}"})
.    .    .    .    PARSE: parseExpression
.    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    FAIL: parseProperty; ERR: Invalid identifier character '*'.
.    .    .    .    .    PARSE: parseReference
.    .    .    .    .    FAIL: parseReference; ERR: Invalid identifier character '*'.
.    .    .    .    .    PARSE: parseExtension
.    .    .    .    .    FAIL: parseExtension; ERR: Expected string '&', got '*'.
.    .    .    .    .    PARSE: parseAdjoinment
.    .    .    .    .    FAIL: parseAdjoinment; ERR: Expected string '$', got '*'.
.    .    .    .    .    PARSE: parseLiteral
.    .    .    .    .    FAIL: parseLiteral; ERR: Expected string '"', got '*'.
.    .    .    .    .    PARSE: parseSet
.    .    .    .    .    FAIL: parseSet; ERR: Expected string '<', got '*'.
.    .    .    .    .    PARSE: parseOptional
.    .    .    .    .    FAIL: parseOptional; ERR: Expected string '?', got '*'.
.    .    .    .    .    PARSE: parseOnePlus
.    .    .    .    .    FAIL: parseOnePlus; ERR: Expected string '+', got '*'.
.    .    .    .    .    PARSE: parseZeroPlus
.    .    .    .    .    .    PARSE: parseExpression
.    .    .    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    .    .    FAIL: parseProperty; ERR: Invalid identifier character '['.
.    .    .    .    .    .    .    PARSE: parseReference
.    .    .    .    .    .    .    FAIL: parseReference; ERR: Invalid identifier character '['.
.    .    .    .    .    .    .    PARSE: parseExtension
.    .    .    .    .    .    .    FAIL: parseExtension; ERR: Expected string '&', got '['.
.    .    .    .    .    .    .    PARSE: parseAdjoinment
.    .    .    .    .    .    .    FAIL: parseAdjoinment; ERR: Expected string '$', got '['.
.    .    .    .    .    .    .    PARSE: parseLiteral
.    .    .    .    .    .    .    FAIL: parseLiteral; ERR: Expected string '"', got '['.
.    .    .    .    .    .    .    PARSE: parseSet
.    .    .    .    .    .    .    FAIL: parseSet; ERR: Expected string '<', got '['.
.    .    .    .    .    .    .    PARSE: parseOptional
.    .    .    .    .    .    .    FAIL: parseOptional; ERR: Expected string '?', got '['.
.    .    .    .    .    .    .    PARSE: parseOnePlus
.    .    .    .    .    .    .    FAIL: parseOnePlus; ERR: Expected string '+', got '['.
.    .    .    .    .    .    .    PARSE: parseZeroPlus
.    .    .    .    .    .    .    FAIL: parseZeroPlus; ERR: Expected string '*', got '['.
.    .    .    .    .    .    .    PARSE: parseGuard
.    .    .    .    .    .    .    FAIL: parseGuard; ERR: Expected string '!', got '['.
.    .    .    .    .    .    .    PARSE: parseBrackets
.    .    .    .    .    .    .    .    PARSE: parseBody
.    .    .    .    .    .    .    .    .    PARSE: parseChoice
.    .    .    .    .    .    .    .    .    .    PARSE: parseExpression
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    .    .    .    .    .    .    FAIL: parseProperty; ERR: Invalid identifier character '"'.
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseReference
.    .    .    .    .    .    .    .    .    .    .    FAIL: parseReference; ERR: Invalid identifier character '"'.
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseExtension
.    .    .    .    .    .    .    .    .    .    .    FAIL: parseExtension; ERR: Expected string '&', got '"'.
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseAdjoinment
.    .    .    .    .    .    .    .    .    .    .    FAIL: parseAdjoinment; ERR: Expected string '$', got '"'.
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseLiteral
.    .    .    .    .    .    .    .    .    .    .    SUCC: (62, {"kind": "Literal", "text": ", "})
.    .    .    .    .    .    .    .    .    .    SUCC: (62, {"kind": "Literal", "text": ", "})
.    .    .    .    .    .    .    .    .    FAIL: parseChoice; ERR: Expected at least one pipe.
.    .    .    .    .    .    .    .    .    PARSE: parseSequence
.    .    .    .    .    .    .    .    .    .    PARSE: parseExpression
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    .    .    .    .    .    .    FAIL: parseProperty; ERR: Invalid identifier character '"'.
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseReference
.    .    .    .    .    .    .    .    .    .    .    FAIL: parseReference; ERR: Invalid identifier character '"'.
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseExtension
.    .    .    .    .    .    .    .    .    .    .    FAIL: parseExtension; ERR: Expected string '&', got '"'.
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseAdjoinment
.    .    .    .    .    .    .    .    .    .    .    FAIL: parseAdjoinment; ERR: Expected string '$', got '"'.
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseLiteral
.    .    .    .    .    .    .    .    .    .    .    SUCC: (62, {"kind": "Literal", "text": ", "})
.    .    .    .    .    .    .    .    .    .    SUCC: (62, {"kind": "Literal", "text": ", "})
.    .    .    .    .    .    .    .    .    .    PARSE: parseExpression
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    .    .    .    .    .    .    FAIL: parseProperty; ERR: Invalid identifier character '&'.
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseReference
.    .    .    .    .    .    .    .    .    .    .    FAIL: parseReference; ERR: Invalid identifier character '&'.
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseExtension
.    .    .    .    .    .    .    .    .    .    .    .    PARSE: parseExpression
.    .    .    .    .    .    .    .    .    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    .    .    .    .    .    .    .    .    FAIL: parseProperty; ERR: Expected string '=', got ']'.
.    .    .    .    .    .    .    .    .    .    .    .    .    PARSE: parseReference
.    .    .    .    .    .    .    .    .    .    .    .    .    SUCC: (68, {"kind": "Reference", "id": "word"})
.    .    .    .    .    .    .    .    .    .    .    .    SUCC: (68, {"kind": "Reference", "id": "word"})
.    .    .    .    .    .    .    .    .    .    .    SUCC: (68, {"kind": "Extension", "inner": "{\"kind\": \"Reference\", \"id\": \"word\"}"})
.    .    .    .    .    .    .    .    .    .    SUCC: (68, {"kind": "Extension", "inner": "{\"kind\": \"Reference\", \"id\": \"word\"}"})
.    .    .    .    .    .    .    .    .    .    PARSE: parseExpression
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    .    .    .    .    .    .    FAIL: parseProperty; ERR: Invalid identifier character ']'.
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseReference
.    .    .    .    .    .    .    .    .    .    .    FAIL: parseReference; ERR: Invalid identifier character ']'.
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseExtension
.    .    .    .    .    .    .    .    .    .    .    FAIL: parseExtension; ERR: Expected string '&', got ']'.
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseAdjoinment
.    .    .    .    .    .    .    .    .    .    .    FAIL: parseAdjoinment; ERR: Expected string '$', got ']'.
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseLiteral
.    .    .    .    .    .    .    .    .    .    .    FAIL: parseLiteral; ERR: Expected string '"', got ']'.
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseSet
.    .    .    .    .    .    .    .    .    .    .    FAIL: parseSet; ERR: Expected string '<', got ']'.
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseOptional
.    .    .    .    .    .    .    .    .    .    .    FAIL: parseOptional; ERR: Expected string '?', got ']'.
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseOnePlus
.    .    .    .    .    .    .    .    .    .    .    FAIL: parseOnePlus; ERR: Expected string '+', got ']'.
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseZeroPlus
.    .    .    .    .    .    .    .    .    .    .    FAIL: parseZeroPlus; ERR: Expected string '*', got ']'.
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseGuard
.    .    .    .    .    .    .    .    .    .    .    FAIL: parseGuard; ERR: Expected string '!', got ']'.
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseBrackets
.    .    .    .    .    .    .    .    .    .    .    FAIL: parseBrackets; ERR: Expected string '[', got ']'.
.    .    .    .    .    .    .    .    .    .    .    PARSE: parseLambda
.    .    .    .    .    .    .    .    .    .    .    FAIL: parseLambda; ERR: Expected string '{', got ']'.
.    .    .    .    .    .    .    .    .    .    FAIL: parseExpression; ERR: Matched no option.
.    .    .    .    .    .    .    .    .    SUCC: (68, {"kind": "Sequence", "contents": "@[{\"kind\": \"Literal\", \"text\": \", \"}, {\"kind\": \"Extension\", \"inner\": \"{\\\"kind\\\": \\\"Reference\\\", \\\"id\\\": \\\"word\\\"}\"}]"})
.    .    .    .    .    .    .    .    SUCC: (68, {"kind": "Sequence", "contents": "@[{\"kind\": \"Literal\", \"text\": \", \"}, {\"kind\": \"Extension\", \"inner\": \"{\\\"kind\\\": \\\"Reference\\\", \\\"id\\\": \\\"word\\\"}\"}]"})
.    .    .    .    .    .    .    SUCC: (69, {"kind": "Sequence", "contents": "@[{\"kind\": \"Literal\", \"text\": \", \"}, {\"kind\": \"Extension\", \"inner\": \"{\\\"kind\\\": \\\"Reference\\\", \\\"id\\\": \\\"word\\\"}\"}]"})
.    .    .    .    .    .    SUCC: (69, {"kind": "Sequence", "contents": "@[{\"kind\": \"Literal\", \"text\": \", \"}, {\"kind\": \"Extension\", \"inner\": \"{\\\"kind\\\": \\\"Reference\\\", \\\"id\\\": \\\"word\\\"}\"}]"})
.    .    .    .    .    SUCC: (69, {"kind": "Optional", "inner": "{\"kind\": \"OnePlus\", \"inner\": \"{\\\"kind\\\": \\\"Sequence\\\", \\\"contents\\\": \\\"@[{\\\\\\\"kind\\\\\\\": \\\\\\\"Literal\\\\\\\", \\\\\\\"text\\\\\\\": \\\\\\\", \\\\\\\"}, {\\\\\\\"kind\\\\\\\": \\\\\\\"Extension\\\\\\\", \\\\\\\"inner\\\\\\\": \\\\\\\"{\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Reference\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"word\\\\\\\\\\\\\\\"}\\\\\\\"}]\\\"}\"}"})
.    .    .    .    SUCC: (69, {"kind": "Optional", "inner": "{\"kind\": \"OnePlus\", \"inner\": \"{\\\"kind\\\": \\\"Sequence\\\", \\\"contents\\\": \\\"@[{\\\\\\\"kind\\\\\\\": \\\\\\\"Literal\\\\\\\", \\\\\\\"text\\\\\\\": \\\\\\\", \\\\\\\"}, {\\\\\\\"kind\\\\\\\": \\\\\\\"Extension\\\\\\\", \\\\\\\"inner\\\\\\\": \\\\\\\"{\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Reference\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"word\\\\\\\\\\\\\\\"}\\\\\\\"}]\\\"}\"}"})
.    .    .    .    PARSE: parseExpression
.    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    FAIL: parseProperty; ERR: Invalid identifier character '
'.
.    .    .    .    .    PARSE: parseReference
.    .    .    .    .    FAIL: parseReference; ERR: Invalid identifier character '
'.
.    .    .    .    .    PARSE: parseExtension
.    .    .    .    .    FAIL: parseExtension; ERR: Expected string '&', got '
'.
.    .    .    .    .    PARSE: parseAdjoinment
.    .    .    .    .    FAIL: parseAdjoinment; ERR: Expected string '$', got '
'.
.    .    .    .    .    PARSE: parseLiteral
.    .    .    .    .    FAIL: parseLiteral; ERR: Expected string '"', got '
'.
.    .    .    .    .    PARSE: parseSet
.    .    .    .    .    FAIL: parseSet; ERR: Expected string '<', got '
'.
.    .    .    .    .    PARSE: parseOptional
.    .    .    .    .    FAIL: parseOptional; ERR: Expected string '?', got '
'.
.    .    .    .    .    PARSE: parseOnePlus
.    .    .    .    .    FAIL: parseOnePlus; ERR: Expected string '+', got '
'.
.    .    .    .    .    PARSE: parseZeroPlus
.    .    .    .    .    FAIL: parseZeroPlus; ERR: Expected string '*', got '
'.
.    .    .    .    .    PARSE: parseGuard
.    .    .    .    .    FAIL: parseGuard; ERR: Expected string '!', got '
'.
.    .    .    .    .    PARSE: parseBrackets
.    .    .    .    .    FAIL: parseBrackets; ERR: Expected string '[', got '
'.
.    .    .    .    .    PARSE: parseLambda
.    .    .    .    .    FAIL: parseLambda; ERR: Expected string '{', got '
'.
.    .    .    .    FAIL: parseExpression; ERR: Matched no option.
.    .    .    SUCC: (69, {"kind": "Sequence", "contents": "@[{\"kind\": \"Extension\", \"inner\": \"{\\\"kind\\\": \\\"Reference\\\", \\\"id\\\": \\\"word\\\"}\"}, {\"kind\": \"Optional\", \"inner\": \"{\\\"kind\\\": \\\"OnePlus\\\", \\\"inner\\\": \\\"{\\\\\\\"kind\\\\\\\": \\\\\\\"Sequence\\\\\\\", \\\\\\\"contents\\\\\\\": \\\\\\\"@[{\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Literal\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"}, {\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Extension\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"inner\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Reference\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"word\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"}\\\\\\\\\\\\\\\"}]\\\\\\\"}\\\"}\"}]"})
.    .    SUCC: (69, {"kind": "Sequence", "contents": "@[{\"kind\": \"Extension\", \"inner\": \"{\\\"kind\\\": \\\"Reference\\\", \\\"id\\\": \\\"word\\\"}\"}, {\"kind\": \"Optional\", \"inner\": \"{\\\"kind\\\": \\\"OnePlus\\\", \\\"inner\\\": \\\"{\\\\\\\"kind\\\\\\\": \\\\\\\"Sequence\\\\\\\", \\\\\\\"contents\\\\\\\": \\\\\\\"@[{\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Literal\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"}, {\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Extension\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"inner\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Reference\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"word\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"}\\\\\\\\\\\\\\\"}]\\\\\\\"}\\\"}\"}]"})
.    SUCC: (69, {"body": "{\"body\": \"{\\\"kind\\\": \\\"Sequence\\\", \\\"contents\\\": \\\"@[{\\\\\\\"kind\\\\\\\": \\\\\\\"Extension\\\\\\\", \\\\\\\"inner\\\\\\\": \\\\\\\"{\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Reference\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"word\\\\\\\\\\\\\\\"}\\\\\\\"}, {\\\\\\\"kind\\\\\\\": \\\\\\\"Optional\\\\\\\", \\\\\\\"inner\\\\\\\": \\\\\\\"{\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"OnePlus\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"inner\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Sequence\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"contents\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"@[{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Literal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"}, {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Extension\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"inner\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Reference\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"word\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"}]\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"}\\\\\\\\\\\\\\\"}\\\\\\\"}]\\\"}\", \"kind\": \"Lambda\"}", "kind": "Definition", "id": "sentence"})
.    PARSE: parseDefinition
.    .    PARSE: parseBody
.    .    .    PARSE: parseChoice
.    .    .    .    PARSE: parseExpression
.    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    .    PARSE: parseExpression
.    .    .    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    .    .    FAIL: parseProperty; ERR: Invalid identifier character '*'.
.    .    .    .    .    .    .    PARSE: parseReference
.    .    .    .    .    .    .    FAIL: parseReference; ERR: Invalid identifier character '*'.
.    .    .    .    .    .    .    PARSE: parseExtension
.    .    .    .    .    .    .    FAIL: parseExtension; ERR: Expected string '&', got '*'.
.    .    .    .    .    .    .    PARSE: parseAdjoinment
.    .    .    .    .    .    .    FAIL: parseAdjoinment; ERR: Expected string '$', got '*'.
.    .    .    .    .    .    .    PARSE: parseLiteral
.    .    .    .    .    .    .    FAIL: parseLiteral; ERR: Expected string '"', got '*'.
.    .    .    .    .    .    .    PARSE: parseSet
.    .    .    .    .    .    .    FAIL: parseSet; ERR: Expected string '<', got '*'.
.    .    .    .    .    .    .    PARSE: parseOptional
.    .    .    .    .    .    .    FAIL: parseOptional; ERR: Expected string '?', got '*'.
.    .    .    .    .    .    .    PARSE: parseOnePlus
.    .    .    .    .    .    .    FAIL: parseOnePlus; ERR: Expected string '+', got '*'.
.    .    .    .    .    .    .    PARSE: parseZeroPlus
.    .    .    .    .    .    .    .    PARSE: parseExpression
.    .    .    .    .    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    .    .    .    .    FAIL: parseProperty; ERR: Invalid identifier character '<'.
.    .    .    .    .    .    .    .    .    PARSE: parseReference
.    .    .    .    .    .    .    .    .    FAIL: parseReference; ERR: Invalid identifier character '<'.
.    .    .    .    .    .    .    .    .    PARSE: parseExtension
.    .    .    .    .    .    .    .    .    FAIL: parseExtension; ERR: Expected string '&', got '<'.
.    .    .    .    .    .    .    .    .    PARSE: parseAdjoinment
.    .    .    .    .    .    .    .    .    FAIL: parseAdjoinment; ERR: Expected string '$', got '<'.
.    .    .    .    .    .    .    .    .    PARSE: parseLiteral
.    .    .    .    .    .    .    .    .    FAIL: parseLiteral; ERR: Expected string '"', got '<'.
.    .    .    .    .    .    .    .    .    PARSE: parseSet
.    .    .    .    .    .    .    .    .    SUCC: (113, {"kind": "Set", "characters": "abcdefghijklmnopqrstuvwxyz"})
.    .    .    .    .    .    .    .    SUCC: (113, {"kind": "Set", "characters": "abcdefghijklmnopqrstuvwxyz"})
.    .    .    .    .    .    .    SUCC: (113, {"kind": "Optional", "inner": "{\"kind\": \"OnePlus\", \"inner\": \"{\\\"kind\\\": \\\"Set\\\", \\\"characters\\\": \\\"abcdefghijklmnopqrstuvwxyz\\\"}\"}"})
.    .    .    .    .    .    SUCC: (113, {"kind": "Optional", "inner": "{\"kind\": \"OnePlus\", \"inner\": \"{\\\"kind\\\": \\\"Set\\\", \\\"characters\\\": \\\"abcdefghijklmnopqrstuvwxyz\\\"}\"}"})
.    .    .    .    .    SUCC: (113, {"kind": "Property", "inner": "{\"kind\": \"Optional\", \"inner\": \"{\\\"kind\\\": \\\"OnePlus\\\", \\\"inner\\\": \\\"{\\\\\\\"kind\\\\\\\": \\\\\\\"Set\\\\\\\", \\\\\\\"characters\\\\\\\": \\\\\\\"abcdefghijklmnopqrstuvwxyz\\\\\\\"}\\\"}\"}", "name": "val"})
.    .    .    .    SUCC: (113, {"kind": "Property", "inner": "{\"kind\": \"Optional\", \"inner\": \"{\\\"kind\\\": \\\"OnePlus\\\", \\\"inner\\\": \\\"{\\\\\\\"kind\\\\\\\": \\\\\\\"Set\\\\\\\", \\\\\\\"characters\\\\\\\": \\\\\\\"abcdefghijklmnopqrstuvwxyz\\\\\\\"}\\\"}\"}", "name": "val"})
.    .    .    FAIL: parseChoice; ERR: Expected at least one pipe.
.    .    .    PARSE: parseSequence
.    .    .    .    PARSE: parseExpression
.    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    .    PARSE: parseExpression
.    .    .    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    .    .    FAIL: parseProperty; ERR: Invalid identifier character '*'.
.    .    .    .    .    .    .    PARSE: parseReference
.    .    .    .    .    .    .    FAIL: parseReference; ERR: Invalid identifier character '*'.
.    .    .    .    .    .    .    PARSE: parseExtension
.    .    .    .    .    .    .    FAIL: parseExtension; ERR: Expected string '&', got '*'.
.    .    .    .    .    .    .    PARSE: parseAdjoinment
.    .    .    .    .    .    .    FAIL: parseAdjoinment; ERR: Expected string '$', got '*'.
.    .    .    .    .    .    .    PARSE: parseLiteral
.    .    .    .    .    .    .    FAIL: parseLiteral; ERR: Expected string '"', got '*'.
.    .    .    .    .    .    .    PARSE: parseSet
.    .    .    .    .    .    .    FAIL: parseSet; ERR: Expected string '<', got '*'.
.    .    .    .    .    .    .    PARSE: parseOptional
.    .    .    .    .    .    .    FAIL: parseOptional; ERR: Expected string '?', got '*'.
.    .    .    .    .    .    .    PARSE: parseOnePlus
.    .    .    .    .    .    .    FAIL: parseOnePlus; ERR: Expected string '+', got '*'.
.    .    .    .    .    .    .    PARSE: parseZeroPlus
.    .    .    .    .    .    .    .    PARSE: parseExpression
.    .    .    .    .    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    .    .    .    .    FAIL: parseProperty; ERR: Invalid identifier character '<'.
.    .    .    .    .    .    .    .    .    PARSE: parseReference
.    .    .    .    .    .    .    .    .    FAIL: parseReference; ERR: Invalid identifier character '<'.
.    .    .    .    .    .    .    .    .    PARSE: parseExtension
.    .    .    .    .    .    .    .    .    FAIL: parseExtension; ERR: Expected string '&', got '<'.
.    .    .    .    .    .    .    .    .    PARSE: parseAdjoinment
.    .    .    .    .    .    .    .    .    FAIL: parseAdjoinment; ERR: Expected string '$', got '<'.
.    .    .    .    .    .    .    .    .    PARSE: parseLiteral
.    .    .    .    .    .    .    .    .    FAIL: parseLiteral; ERR: Expected string '"', got '<'.
.    .    .    .    .    .    .    .    .    PARSE: parseSet
.    .    .    .    .    .    .    .    .    SUCC: (113, {"kind": "Set", "characters": "abcdefghijklmnopqrstuvwxyz"})
.    .    .    .    .    .    .    .    SUCC: (113, {"kind": "Set", "characters": "abcdefghijklmnopqrstuvwxyz"})
.    .    .    .    .    .    .    SUCC: (113, {"kind": "Optional", "inner": "{\"kind\": \"OnePlus\", \"inner\": \"{\\\"kind\\\": \\\"Set\\\", \\\"characters\\\": \\\"abcdefghijklmnopqrstuvwxyz\\\"}\"}"})
.    .    .    .    .    .    SUCC: (113, {"kind": "Optional", "inner": "{\"kind\": \"OnePlus\", \"inner\": \"{\\\"kind\\\": \\\"Set\\\", \\\"characters\\\": \\\"abcdefghijklmnopqrstuvwxyz\\\"}\"}"})
.    .    .    .    .    SUCC: (113, {"kind": "Property", "inner": "{\"kind\": \"Optional\", \"inner\": \"{\\\"kind\\\": \\\"OnePlus\\\", \\\"inner\\\": \\\"{\\\\\\\"kind\\\\\\\": \\\\\\\"Set\\\\\\\", \\\\\\\"characters\\\\\\\": \\\\\\\"abcdefghijklmnopqrstuvwxyz\\\\\\\"}\\\"}\"}", "name": "val"})
.    .    .    .    SUCC: (113, {"kind": "Property", "inner": "{\"kind\": \"Optional\", \"inner\": \"{\\\"kind\\\": \\\"OnePlus\\\", \\\"inner\\\": \\\"{\\\\\\\"kind\\\\\\\": \\\\\\\"Set\\\\\\\", \\\\\\\"characters\\\\\\\": \\\\\\\"abcdefghijklmnopqrstuvwxyz\\\\\\\"}\\\"}\"}", "name": "val"})
.    .    .    .    PARSE: parseExpression
.    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    FAIL: parseProperty; ERR: Invalid identifier character '
'.
.    .    .    .    .    PARSE: parseReference
.    .    .    .    .    FAIL: parseReference; ERR: Invalid identifier character '
'.
.    .    .    .    .    PARSE: parseExtension
.    .    .    .    .    FAIL: parseExtension; ERR: Expected string '&', got '
'.
.    .    .    .    .    PARSE: parseAdjoinment
.    .    .    .    .    FAIL: parseAdjoinment; ERR: Expected string '$', got '
'.
.    .    .    .    .    PARSE: parseLiteral
.    .    .    .    .    FAIL: parseLiteral; ERR: Expected string '"', got '
'.
.    .    .    .    .    PARSE: parseSet
.    .    .    .    .    FAIL: parseSet; ERR: Expected string '<', got '
'.
.    .    .    .    .    PARSE: parseOptional
.    .    .    .    .    FAIL: parseOptional; ERR: Expected string '?', got '
'.
.    .    .    .    .    PARSE: parseOnePlus
.    .    .    .    .    FAIL: parseOnePlus; ERR: Expected string '+', got '
'.
.    .    .    .    .    PARSE: parseZeroPlus
.    .    .    .    .    FAIL: parseZeroPlus; ERR: Expected string '*', got '
'.
.    .    .    .    .    PARSE: parseGuard
.    .    .    .    .    FAIL: parseGuard; ERR: Expected string '!', got '
'.
.    .    .    .    .    PARSE: parseBrackets
.    .    .    .    .    FAIL: parseBrackets; ERR: Expected string '[', got '
'.
.    .    .    .    .    PARSE: parseLambda
.    .    .    .    .    FAIL: parseLambda; ERR: Expected string '{', got '
'.
.    .    .    .    FAIL: parseExpression; ERR: Matched no option.
.    .    .    FAIL: parseSequence; ERR: Expected at least two simple expressions.
.    .    .    PARSE: parseExpression
.    .    .    .    PARSE: parseProperty
.    .    .    .    .    PARSE: parseExpression
.    .    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    .    FAIL: parseProperty; ERR: Invalid identifier character '*'.
.    .    .    .    .    .    PARSE: parseReference
.    .    .    .    .    .    FAIL: parseReference; ERR: Invalid identifier character '*'.
.    .    .    .    .    .    PARSE: parseExtension
.    .    .    .    .    .    FAIL: parseExtension; ERR: Expected string '&', got '*'.
.    .    .    .    .    .    PARSE: parseAdjoinment
.    .    .    .    .    .    FAIL: parseAdjoinment; ERR: Expected string '$', got '*'.
.    .    .    .    .    .    PARSE: parseLiteral
.    .    .    .    .    .    FAIL: parseLiteral; ERR: Expected string '"', got '*'.
.    .    .    .    .    .    PARSE: parseSet
.    .    .    .    .    .    FAIL: parseSet; ERR: Expected string '<', got '*'.
.    .    .    .    .    .    PARSE: parseOptional
.    .    .    .    .    .    FAIL: parseOptional; ERR: Expected string '?', got '*'.
.    .    .    .    .    .    PARSE: parseOnePlus
.    .    .    .    .    .    FAIL: parseOnePlus; ERR: Expected string '+', got '*'.
.    .    .    .    .    .    PARSE: parseZeroPlus
.    .    .    .    .    .    .    PARSE: parseExpression
.    .    .    .    .    .    .    .    PARSE: parseProperty
.    .    .    .    .    .    .    .    FAIL: parseProperty; ERR: Invalid identifier character '<'.
.    .    .    .    .    .    .    .    PARSE: parseReference
.    .    .    .    .    .    .    .    FAIL: parseReference; ERR: Invalid identifier character '<'.
.    .    .    .    .    .    .    .    PARSE: parseExtension
.    .    .    .    .    .    .    .    FAIL: parseExtension; ERR: Expected string '&', got '<'.
.    .    .    .    .    .    .    .    PARSE: parseAdjoinment
.    .    .    .    .    .    .    .    FAIL: parseAdjoinment; ERR: Expected string '$', got '<'.
.    .    .    .    .    .    .    .    PARSE: parseLiteral
.    .    .    .    .    .    .    .    FAIL: parseLiteral; ERR: Expected string '"', got '<'.
.    .    .    .    .    .    .    .    PARSE: parseSet
.    .    .    .    .    .    .    .    SUCC: (113, {"kind": "Set", "characters": "abcdefghijklmnopqrstuvwxyz"})
.    .    .    .    .    .    .    SUCC: (113, {"kind": "Set", "characters": "abcdefghijklmnopqrstuvwxyz"})
.    .    .    .    .    .    SUCC: (113, {"kind": "Optional", "inner": "{\"kind\": \"OnePlus\", \"inner\": \"{\\\"kind\\\": \\\"Set\\\", \\\"characters\\\": \\\"abcdefghijklmnopqrstuvwxyz\\\"}\"}"})
.    .    .    .    .    SUCC: (113, {"kind": "Optional", "inner": "{\"kind\": \"OnePlus\", \"inner\": \"{\\\"kind\\\": \\\"Set\\\", \\\"characters\\\": \\\"abcdefghijklmnopqrstuvwxyz\\\"}\"}"})
.    .    .    .    SUCC: (113, {"kind": "Property", "inner": "{\"kind\": \"Optional\", \"inner\": \"{\\\"kind\\\": \\\"OnePlus\\\", \\\"inner\\\": \\\"{\\\\\\\"kind\\\\\\\": \\\\\\\"Set\\\\\\\", \\\\\\\"characters\\\\\\\": \\\\\\\"abcdefghijklmnopqrstuvwxyz\\\\\\\"}\\\"}\"}", "name": "val"})
.    .    .    SUCC: (113, {"kind": "Property", "inner": "{\"kind\": \"Optional\", \"inner\": \"{\\\"kind\\\": \\\"OnePlus\\\", \\\"inner\\\": \\\"{\\\\\\\"kind\\\\\\\": \\\\\\\"Set\\\\\\\", \\\\\\\"characters\\\\\\\": \\\\\\\"abcdefghijklmnopqrstuvwxyz\\\\\\\"}\\\"}\"}", "name": "val"})
.    .    SUCC: (113, {"kind": "Property", "inner": "{\"kind\": \"Optional\", \"inner\": \"{\\\"kind\\\": \\\"OnePlus\\\", \\\"inner\\\": \\\"{\\\\\\\"kind\\\\\\\": \\\\\\\"Set\\\\\\\", \\\\\\\"characters\\\\\\\": \\\\\\\"abcdefghijklmnopqrstuvwxyz\\\\\\\"}\\\"}\"}", "name": "val"})
.    SUCC: (113, {"body": "{\"body\": \"{\\\"kind\\\": \\\"Property\\\", \\\"inner\\\": \\\"{\\\\\\\"kind\\\\\\\": \\\\\\\"Optional\\\\\\\", \\\\\\\"inner\\\\\\\": \\\\\\\"{\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"OnePlus\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"inner\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Set\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"characters\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"abcdefghijklmnopqrstuvwxyz\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"}\\\\\\\\\\\\\\\"}\\\\\\\"}\\\", \\\"name\\\": \\\"val\\\"}\", \"kind\": \"Lambda\"}", "kind": "Definition", "id": "word"})
SUCC: (118, {"kind": "Program", "definitions": "@[{\"body\": \"{\\\"body\\\": \\\"{\\\\\\\"kind\\\\\\\": \\\\\\\"Property\\\\\\\", \\\\\\\"inner\\\\\\\": \\\\\\\"{\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Reference\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"sentence\\\\\\\\\\\\\\\"}\\\\\\\", \\\\\\\"name\\\\\\\": \\\\\\\"sentence\\\\\\\"}\\\", \\\"kind\\\": \\\"Lambda\\\"}\", \"kind\": \"Definition\", \"id\": \"sentenceNode\"}, {\"body\": \"{\\\"body\\\": \\\"{\\\\\\\"kind\\\\\\\": \\\\\\\"Sequence\\\\\\\", \\\\\\\"contents\\\\\\\": \\\\\\\"@[{\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Extension\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"inner\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Reference\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"word\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"}\\\\\\\\\\\\\\\"}, {\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Optional\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"inner\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"OnePlus\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"inner\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Sequence\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"contents\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"@[{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Literal\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"}, {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Extension\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"inner\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"kindeferenceid\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"word\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"}]\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"}\\\\\\\\\\\\\\\"}]\\\\\\\"}\\\", \\\"kind\\\": \\\"Lambda\\\"}\", \"kind\": \"Definition\", \"id\": \"sentence\"}, {\"body\": \"{\\\"body\\\": \\\"{\\\\\\\"kind\\\\\\\": \\\\\\\"Property\\\\\\\", \\\\\\\"inner\\\\\\\": \\\\\\\"{\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Optional\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"inner\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"OnePlus\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"inner\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Set\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"characters\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"abcdefghijklmnopqrstuvwxyz\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"}\\\\\\\\\\\\\\\"}\\\\\\\", \\\\\\\"name\\\\\\\": \\\\\\\"val\\\\\\\"}\\\", \\\"kind\\\": \\\"Lambda\\\"}\", \"kind\": \"Definition\", \"id\": \"word\"}]"})
{ kind: Program
rrt: rrtNone
definitions: @[
.     { kind: Definition
.     rrt: rrtNone
.     id: sentenceNode
.     body:
.     .     { kind: Lambda
.     .     rrt: rrtNone
.     .     body:
.     .     .     { kind: Property
.     .     .     rrt: rrtNone
.     .     .     name: sentence
.     .     .     inner:
.     .     .     .     { kind: Reference
.     .     .     .     rrt: rrtList
.     .     .     .     id: sentence } } } }
.     { kind: Definition
.     rrt: rrtNone
.     id: sentence
.     body:
.     .     { kind: Lambda
.     .     rrt: rrtList
.     .     body:
.     .     .     { kind: Sequence
.     .     .     rrt: rrtText
.     .     .     contents: @[
.     .     .     .     { kind: Extension
.     .     .     .     rrt: rrtNone
.     .     .     .     inner:
.     .     .     .     .     { kind: Reference
.     .     .     .     .     rrt: rrtNone
.     .     .     .     .     id: word } }
.     .     .     .     { kind: Optional
.     .     .     .     rrt: rrtText
.     .     .     .     inner:
.     .     .     .     .     { kind: OnePlus
.     .     .     .     .     rrt: rrtText
.     .     .     .     .     inner:
.     .     .     .     .     .     { kind: Sequence
.     .     .     .     .     .     rrt: rrtText
.     .     .     .     .     .     contents: @[
.     .     .     .     .     .     .     { kind: Literal
.     .     .     .     .     .     .     rrt: rrtText
.     .     .     .     .     .     .     text: ,  }
.     .     .     .     .     .     .     { kind: Extension
.     .     .     .     .     .     .     rrt: rrtNone
.     .     .     .     .     .     .     inner:
.     .     .     .     .     .     .     .     { kind: Reference
.     .     .     .     .     .     .     .     rrt: rrtNone
.     .     .     .     .     .     .     .     id: word } }
.     .     .     .     .     .     ] } } }
.     .     .     ] } } }
.     { kind: Definition
.     rrt: rrtNone
.     id: word
.     body:
.     .     { kind: Lambda
.     .     rrt: rrtNone
.     .     body:
.     .     .     { kind: Property
.     .     .     rrt: rrtNone
.     .     .     name: val
.     .     .     inner:
.     .     .     .     { kind: Optional
.     .     .     .     rrt: rrtText
.     .     .     .     inner:
.     .     .     .     .     { kind: OnePlus
.     .     .     .     .     rrt: rrtText
.     .     .     .     .     inner:
.     .     .     .     .     .     { kind: Set
.     .     .     .     .     .     rrt: rrtText
.     .     .     .     .     .     characters: abcdefghijklmnopqrstuvwxyz } } } } } }
] }
